plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'checkstyle'
}

group = 'com.be-better'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.6.2'
    velocityVersion = '2.4'
    keycloackAdminApiVersion = '26.0.2'
    jacksonVersion = '2.17.2'
    minioVersion = '8.5.12'
    passayVersion = '1.6.6'
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.keycloak:keycloak-admin-client:$keycloackAdminApiVersion"
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation "org.apache.velocity:velocity-engine-core:$velocityVersion"
    implementation "io.minio:minio:$minioVersion"
    implementation "org.passay:passay:$passayVersion"


    implementation 'org.liquibase:liquibase-core'
    implementation 'org.mapstruct:mapstruct:1.6.2'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    annotationProcessor "org.hibernate.orm:hibernate-jpamodelgen"

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

checkstyle {
    toolVersion = '10.9.3'
    configFile = file("${project.rootDir}/codestyle/checkstyle.xml")
}

tasks.withType(Checkstyle) {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    exclude '**/test/**/*'
    exclude '**/target/**/*'
}

tasks.check.dependsOn tasks.withType(Checkstyle)

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000"]
}
